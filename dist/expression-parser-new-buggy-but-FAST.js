const expressionParser2=e=>{if(!e)return e;let r=JSON.stringify(e);parserSyntax.forEach((e=>{r=r.replace(e.match,e.replace)}));let s,a=new Set;try{s=r.interpolate(e)}catch(r){let s=[];if(r.message.includes("is not defined")){const a=r.message.split(" ")[0];Object.keys(e).forEach((e=>{a.similarity(e)>50&&s.push(e)}))}a.add(`Some of your \${} expression has an error.\nError message: ${bold(r.message)} ${s?`\nDid you meant: ${bold(s.join(" or "))}?`:""}`)}return a.size>0&&(a.forEach((e=>{log.error(e)})),process.exit(0)),JSON.parse(s.replace(/\\/g,"\\\\"))};